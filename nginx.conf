user  www-data;
worker_processes  auto;

#error_log  /var/log/nginx/error.log warn;
# only log critical errors
error_log /var/log/nginx/error.log crit;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 100000;

events {
    worker_connections  4000;
    use epoll;
    multi_accept on;
}

http {
    index index.html index.php;

    upstream php-upstream {
        server 127.0.0.1:9000;
    }

    upstream fastcgi_backend {
       # use tcp connection
       server  127.0.0.1:9000;
       # or socket
    #    server   unix:/var/run/php/php7.0-fpm.sock;
    }

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    server_names_hash_bucket_size 64;

    # allows big media uploads
    client_max_body_size 120m;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # GeoIP support is included in the Ubuntu 12.04 Nginx.
    # This enables logging, and the following:
    #    if ($geoip_country_code ~ (CN|ZW) ) {
    #      return 403;
    #    }
    #geoip_country         /usr/share/GeoIP/GeoIP.dat;
    gzip on;
    gzip_disable "msie6";

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    gzip_min_length  1000;
    gzip_proxied any;
    gzip_types       text/plain application/json application/xml text/css text/js application/x-javascript;

    # localhost.io
    server {
        listen 80;
        listen 443 ssl;

        server_name magento.localhost pwa.localhost host.docker.internal localhost.io localhost.com;

        set $MAGE_ROOT /var/www/html;
        include /var/www/html/nginx.conf.sample;
        fastcgi_read_timeout 3000;

        # SSL
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
        ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # expires epoch;
        # add_header 'Access-Control-Allow-Origin' '*';
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
        # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
        # set $cors '';

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        # required to be able to read Authorization header in frontend
        # add_header 'Access-Control-Expose-Headers' 'Authorization' always;

        # Tell client that this pre-flight info is valid for 20 days
        # expires 20d;
        # add_header 'Access-Control-Max-Age' 1728000;
        # add_header 'Cache-Control' 'public';
    }
}